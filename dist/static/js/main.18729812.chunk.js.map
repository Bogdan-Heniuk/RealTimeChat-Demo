{"version":3,"sources":["config.js","store/user.js","components/navbar.js","components/register/register.js","components/messages/message.js","store/messages.js","components/common/scroll.js","components/messages/messages.js","hooks/use-input-value.js","components/messages/inputField.js","components/messages/chatContent.js","components/common/publicRoute.js","components/common/privateRoute.js","components/common/fallbackRoute.js","App.js","index.js"],"names":["firebase","apps","length","initializeApp","databaseURL","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","userStore","user","isInitialized","signOut","subscribeToAuthStateChanged","onAuthStateChanged","makeAutoObservable","this","Navbar","observer","className","style","marginLeft","href","width","height","onClick","Register","SignInWithGoogle","a","googleProvider","GoogleAuthProvider","signInWithPopup","submitHandler","event","preventDefault","src","Message","props","flexDirection","uid","data","user_id","referrerPolicy","avatar","alt","title","messages","onMessage","snapshot","Object","values","val","database","ref","on","message","push","AlwaysScrollToBottom","elementRef","useRef","useEffect","current","scrollIntoView","Messages","messageStore","map","element","id","useInputValue","defaultValue","options","useState","value","setValue","onEnter","handleKeyDown","key","bind","onKeyDown","onChange","target","clear","InputField","input","disabled","trim","addMessage","Date","now","providerData","photoURL","ChatContent","messagesStore","subscribeToMessages","PublicRoute","Component","component","rest","render","to","PrivateRoute","FallbackRoute","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.18729812.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport const firebaseConfig = {\r\n    databaseURL : 'https://chat-e1d30-default-rtdb.europe-west1.firebasedatabase.app',\r\n    apiKey: \"AIzaSyBzugpE4jD6GKke5E1DbJa_7Ige0dnxico\",\r\n    authDomain: \"chat-e1d30.firebaseapp.com\",\r\n    projectId: \"chat-e1d30\",\r\n    storageBucket: \"chat-e1d30.appspot.com\",\r\n    messagingSenderId: \"1048710430565\",\r\n    appId: \"1:1048710430565:web:84b7570ba31fabf1a1eb8c\"\r\n};\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\nexport const auth = firebase.auth()\r\nexport default firebase\r\n","import {makeAutoObservable} from \"mobx\";\r\nimport firebase from \"../config\";\r\n\r\nclass User {\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    user = null\r\n\r\n    isInitialized = false\r\n\r\n    signOut = () => {\r\n        return firebase.auth().signOut()\r\n    }\r\n\r\n    subscribeToAuthStateChanged = () => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            this.user = user\r\n            this.isInitialized = true\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const userStore = new User()","import React from \"react\";\r\nimport {userStore} from \"../store/user\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst Navbar = observer(() => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper\">\r\n                <a style={{marginLeft: '10px'}} href=\"#\" className=\"brand-logo\">React-chat</a>\r\n                {userStore.user &&\r\n                <i style={{width: 10, height: 10}} onClick={userStore.signOut}\r\n                   className=\"material-icons sign-out\">exit_to_app</i>\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n})\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\nimport firebase from 'firebase';\r\nimport {auth} from \"../../config\";\r\n\r\nconst Register = () => {\r\n\r\n    const SignInWithGoogle = async () => {\r\n        const googleProvider = new firebase.auth.GoogleAuthProvider()\r\n        await auth.signInWithPopup(googleProvider)\r\n    }\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault()\r\n        await SignInWithGoogle()\r\n    }\r\n\r\n    return (\r\n        <div className='row register'>\r\n            <div onClick={submitHandler} className=\"google-btn\">\r\n                <div className=\"google-icon-wrapper\">\r\n                    <img className=\"google-icon\"\r\n                         src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\r\n                </div>\r\n                <p className=\"btn-text\"><b>Sign in with google</b></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React from \"react\";\r\nimport {userStore} from \"../../store/user\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst Message = observer ((props) => {\r\n\r\n    return (\r\n        <div style={{\r\n            flexDirection : userStore.user.uid === props.data.user_id ? 'row-reverse' : 'row',\r\n        }} className='message flex'>\r\n            <div >\r\n                <img referrerPolicy=\"no-referrer\" className=\"avatar\" src={props.data.avatar} alt=\"\"/>\r\n            </div>\r\n            <div className=\"text\">\r\n                {props.data.title}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import {makeAutoObservable} from \"mobx\";\r\nimport firebase from \"../config\";\r\n\r\nclass Messages {\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    messages = []\r\n\r\n    onMessage = (snapshot) => {\r\n        this.messages = Object.values(snapshot.val() || {})\r\n\r\n    }\r\n\r\n    async subscribeToMessages() {\r\n        await firebase.database().ref('messages').on('value', this.onMessage)\r\n\r\n    }\r\n\r\n    async addMessage(message) {\r\n        await firebase.database().ref('messages').push(message)\r\n    }\r\n\r\n}\r\n\r\nexport default new Messages()","import React, {useEffect, useRef} from \"react\";\r\n\r\n\r\nconst AlwaysScrollToBottom = () => {\r\n    const elementRef = useRef();\r\n    useEffect(() => elementRef.current.scrollIntoView());\r\n    return <div ref={elementRef} />;\r\n};\r\n\r\nexport default AlwaysScrollToBottom\r\n\r\n","import React from \"react\";\r\nimport Message from \"./message\";\r\nimport messageStore from \"../../store/messages\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport AlwaysScrollToBottom from \"../common/scroll\";\r\n\r\nconst Messages = observer(() => {\r\n    return (\r\n        <div className='messages'>\r\n            {messageStore.messages.map(element => <Message data = {element} key={element.id}/>)}\r\n            <AlwaysScrollToBottom/>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default Messages","import {useState} from 'react'\r\n\r\n\r\nfunction useInputValue(defaultValue = '', options  = {}){\r\n    const [value, setValue] = useState (defaultValue)\r\n    const {onEnter} = options\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter' && typeof onEnter === 'function') {\r\n            onEnter()\r\n        }\r\n    }\r\n    return {\r\n        bind: {\r\n            onKeyDown: handleKeyDown,\r\n            value,\r\n            onChange: (event) => setValue(event.target.value)\r\n        },\r\n        value: () => value,\r\n        clear: () => setValue('')\r\n    }\r\n}\r\n\r\nexport default useInputValue","import React from \"react\";\r\nimport message from \"../../store/messages\";\r\nimport useInputValue from \"../../hooks/use-input-value\";\r\nimport {userStore} from \"../../store/user\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst InputField = observer(() => {\r\n    const input = useInputValue('', {onEnter : submitHandler})\r\n    const disabled = !!!input.value().trim().length\r\n\r\n    async function submitHandler(){\r\n        if(disabled) return\r\n        await message.addMessage({\r\n            user_id : userStore.user.uid,\r\n            id: Date.now(),\r\n            title: input.value(),\r\n            avatar: userStore.user.providerData[0].photoURL\r\n        })\r\n        input.clear()\r\n    }\r\n    return (\r\n            <div className=\"input-field flex\">\r\n                <input {...input.bind} className=\"validate\" />\r\n                <div className=\"send-button\">\r\n                    <button disabled={disabled} onClick={submitHandler} className=\"btn-floating btn-large red\">\r\n                        <i style={{marginLeft: '2.5px'}} className=\"large material-icons\">send</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n})\r\n\r\nexport default InputField","import React, {useEffect} from \"react\";\r\nimport Messages from \"./messages\";\r\nimport InputField from \"./inputField\";\r\nimport messagesStore from '../../store/messages'\r\n\r\nconst ChatContent = () => {\r\n    useEffect(() => {\r\n        messagesStore.subscribeToMessages()\r\n    })\r\n    return (\r\n        <>\r\n            <div className=\"row content\">\r\n                <div className=\"col s12\">\r\n                    <Messages/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row input\">\r\n                <div className=\"col s12\">\r\n                    <InputField/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatContent","import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {userStore} from \"../../store/user\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst PublicRoute = observer(({component: Component, ...rest}) => {\r\n    const user = userStore.user\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            user ? <Redirect to=\"/chat\" /> : <Component {...props} />\r\n        )} />\r\n    );\r\n});\r\n\r\nexport default PublicRoute","import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {userStore} from \"../../store/user\";\r\n\r\nconst PrivateRoute = observer(( {component: Component, ...rest}) => {\r\n    const user = userStore.user\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            user ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/register\" />\r\n        )} />\r\n    );\r\n});\r\n\r\nexport default PrivateRoute","import React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {userStore} from \"../../store/user\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst FallbackRoute = observer(() => {\r\n    const user = userStore.user\r\n    if(user) return <Redirect to='/chat'/>\r\n    return <Redirect to ='/register'/>\r\n})\r\n\r\nexport default FallbackRoute","import Navbar from \"./components/navbar\";\nimport './css/App.css'\nimport React, {useEffect} from \"react\";\nimport Register from \"./components/register/register\";\nimport {BrowserRouter as Router , Route, Switch} from \"react-router-dom\";\nimport ChatContent from \"./components/messages/chatContent\";\nimport PublicRoute from \"./components/common/publicRoute\";\nimport PrivateRoute from \"./components/common/privateRoute\";\nimport FallbackRoute from \"./components/common/fallbackRoute\";\nimport {userStore} from './store/user'\nimport {observer} from \"mobx-react-lite\";\n\nconst App = observer(() => {\n\n    useEffect(() => {\n        userStore.subscribeToAuthStateChanged()\n    }, [])\n\n    if(!userStore.isInitialized){\n        return null\n    }\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <div className=\"navbar\">\n                    <Navbar/>\n                </div>\n                <Switch>\n                    <PrivateRoute path='/chat' exact component={ChatContent}/>\n                    <PublicRoute path='/register' exact component={Register}/>\n                    <Route path='*' component={FallbackRoute}/>\n                </Switch>\n            </div>\n        </Router>\n    )\n})\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}